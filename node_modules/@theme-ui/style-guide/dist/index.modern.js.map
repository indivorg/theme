{"version":3,"file":"index.modern.js","sources":["../src/context.ts","../src/Card.tsx","../src/TypeStyle.tsx","../src/TypeScale.tsx","../src/HeadingStyle.tsx","../src/FontFamily.ts","../src/color.ts","../src/ColorSwatch.tsx","../src/ColorPalette.tsx","../src/ThemeCard.tsx"],"sourcesContent":["import { useThemeUI } from 'theme-ui'\nexport const useTheme = () => useThemeUI().theme\n","/** @jsx jsx */\nimport { ComponentProps } from 'react'\nimport { jsx } from 'theme-ui'\n\nexport interface CardProps extends ComponentProps<'div'> {}\nexport const Card: React.FC<CardProps> = props => (\n  <div\n    {...props}\n    sx={{\n      variant: 'styles.Card',\n    }}\n  />\n)\n\nexport default Card\n","/** @jsx jsx */\nimport { ComponentProps } from 'react'\nimport { jsx } from 'theme-ui'\nimport Card from './Card'\n\nexport interface TypeStyleProps extends ComponentProps<typeof Card> {\n  fontSize?: number | string\n  fontFamily?: string\n  lineHeight?: string\n  fontWeight?: string\n  truncate?: boolean\n}\nexport const TypeStyle = ({\n  fontSize = 5,\n  fontFamily = 'body',\n  lineHeight = 'body',\n  fontWeight = 'body',\n  children = 'Aa',\n  truncate = true,\n  ...props\n}: TypeStyleProps) => {\n  return (\n    <Card\n      {...props}\n      children={children}\n      sx={{\n        fontFamily,\n        fontSize,\n        lineHeight,\n        fontWeight,\n        ...(truncate\n          ? {\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              whiteSpace: 'nowrap',\n            }\n          : {}),\n      }}\n    />\n  )\n}\n\nexport default TypeStyle\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { useTheme } from './context'\nimport TypeStyle from './TypeStyle'\n\nconst getValue = (fontSize: string | number) =>\n  typeof fontSize === 'number' ? `${fontSize}px` : fontSize\n\nexport interface TypeScaleProps {\n  reverse?: boolean\n}\nexport const TypeScale = ({ reverse = true, ...props }) => {\n  const theme = useTheme() || {}\n  const fontSizeEntries = reverse\n    ? Object.entries(theme.fontSizes || []).reverse()\n    : Object.entries(theme.fontSizes || [])\n\n  return (\n    <div\n      sx={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'baseline',\n      }}>\n      {fontSizeEntries.map(([key, val]) => {\n        if (typeof val === 'object') {\n          // TODO: can theme.fontSizes be a deeply nested object?\n          // This wasn't handled previously\n          // We should either update the types or recursively render here.\n          return null\n        }\n\n          return (\n          <TypeStyle\n            key={key}\n            fontSize={key}\n            sx={{\n              mr: 3,\n            }}\n            children={getValue(val)}\n            {...props}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default TypeScale\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport TypeStyle, { TypeStyleProps } from './TypeStyle'\n\nexport const HeadingStyle = (props: TypeStyleProps) => (\n  <TypeStyle\n    fontFamily=\"heading\"\n    fontWeight=\"heading\"\n    lineHeight=\"heading\"\n    {...props}\n  />\n)\n\nexport default HeadingStyle\n","import { get } from 'theme-ui'\nimport { useTheme } from './context'\n\nexport const FontFamily = ({ name }: { name: string }) => {\n  const { fonts } = useTheme()!\n  return get(fonts!, name)\n}\n","import Color from 'color'\n\ntype ColorArgument = ConstructorParameters<typeof Color>[0]\nexport const toHex = (raw: ColorArgument) => {\n  try {\n    return Color(raw).hex()\n  } catch (e) {\n    return\n  }\n}\n\nexport const toRGB = (raw: ColorArgument) => {\n  try {\n    return Color(raw)\n      .rgb()\n      .string()\n  } catch (e) {\n    return\n  }\n}\n\nexport const toHSL = (raw: ColorArgument) => {\n  try {\n    return Color(raw)\n      .hsl()\n      .string()\n  } catch (e) {\n    return\n  }\n}\n","/** @jsx jsx */\nimport { ComponentProps } from 'react'\nimport { jsx, get, ResponsiveStyleValue } from 'theme-ui'\nimport { toHex } from './color'\nimport { useTheme } from './context'\n\nexport interface ColorSwatchProps extends ComponentProps<'div'> {\n  color: string\n  name?: React.ReactNode\n  size?: ResponsiveStyleValue<string | number>\n  label?: boolean\n}\nexport const ColorSwatch = ({\n  color,\n  name,\n  size = 128,\n  label = true,\n  ...props\n}: ColorSwatchProps) => {\n  const { colors } = useTheme()!\n  const value = get(colors!, color)\n  return (\n    <div {...props} title={`${toHex(value)}`}>\n      <div\n        sx={{\n          width: size,\n          height: size,\n          bg: color,\n        }}\n      />\n      {label && (\n        <div\n          sx={{\n            py: 2,\n          }}>\n          {name || color}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ColorSwatch\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { useTheme } from './context'\nimport ColorSwatch, { ColorSwatchProps } from './ColorSwatch'\n\nconst join = (...args: unknown[]) => args.filter(Boolean).join('.')\n\ntype Colors = Record<string, string | { [key: string]: Colors }>\nexport interface ColorRowProps extends Omit<ColorSwatchProps, 'color'> {\n  colors: Colors\n  name?: string\n  omit?: string[]\n  render?: (value: {\n    swatch: React.ReactElement\n    color: string\n    key: string\n    name: string\n  }) => React.ReactNode\n  size?: number | string\n}\nexport const ColorRow = ({\n  colors,\n  name,\n  omit = ['modes'],\n  render,\n  size,\n  ...props\n}: ColorRowProps) => {\n  return (\n    <div>\n      <div\n        sx={{\n          fontSize: 0,\n          display: 'flex',\n          flexWrap: 'wrap',\n        }}>\n        {Object.keys(colors).map(key => {\n          const color = colors[key]\n          if (!color || omit.includes(key)) return false\n          const id = join(name, key)\n          if (typeof color === 'object') {\n            return (\n              <ColorRow\n                {...props}\n                key={key}\n                name={id}\n                colors={color as Colors}\n                size={size}\n                omit={omit}\n              />\n            )\n          }\n          const swatch = (\n            <ColorSwatch\n              {...props}\n              key={key}\n              name={id}\n              color={id}\n              size={size}\n              sx={{\n                m: 2,\n              }}\n            />\n          )\n          if (typeof render === 'function') {\n            return render({\n              swatch,\n              color,\n              key,\n              name: id,\n            })\n          }\n          return swatch\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport interface ColorPaletteProps extends Omit<ColorRowProps, 'colors'> {\n  omit?: string[]\n  mode?: string\n}\nexport const ColorPalette = ({ omit, mode, ...props }: ColorPaletteProps) => {\n  const theme = useTheme()\n  let colors = theme!.colors\n\n  if (mode && colors!.modes) {\n    colors = colors!.modes[mode] || colors\n  }\n\n  return (\n    <div\n      style={{\n        marginLeft: -8,\n        marginRight: -8,\n      }}>\n      <ColorRow {...props} omit={omit} colors={colors as Colors} />\n    </div>\n  )\n}\n\nexport default ColorPalette\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport Card, { CardProps } from './Card'\nimport ColorPalette from './ColorPalette'\nimport TypeStyle from './TypeStyle'\n\nexport interface ThemeCardProps extends CardProps {}\nexport const ThemeCard: React.FC<ThemeCardProps> = props => {\n  return (\n    <Card\n      {...props}\n      sx={{\n        color: 'text',\n        bg: 'background',\n      }}>\n      <TypeStyle />\n      <ColorPalette label={false} size={32} />\n    </Card>\n  )\n}\n\nexport default ThemeCard\n"],"names":["useTheme","useThemeUI","theme","Card","props","jsx","sx","variant","TypeStyle","fontSize","fontFamily","lineHeight","fontWeight","children","truncate","overflow","textOverflow","whiteSpace","getValue","TypeScale","reverse","fontSizeEntries","Object","entries","fontSizes","display","flexWrap","alignItems","map","key","val","mr","HeadingStyle","FontFamily","name","fonts","get","toHex","raw","Color","hex","e","ColorSwatch","color","size","label","colors","value","title","width","height","bg","py","join","args","filter","Boolean","ColorRow","omit","render","keys","includes","id","swatch","m","ColorPalette","mode","modes","style","marginLeft","marginRight","ThemeCard"],"mappings":"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"}